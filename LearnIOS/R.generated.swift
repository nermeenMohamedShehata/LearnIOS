//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.image` struct is generated, and contains static references to 29 images.
  struct image {
    /// Image `cancel`.
    static let cancel = Rswift.ImageResource(bundle: R.hostingBundle, name: "cancel")
    /// Image `comment`.
    static let comment = Rswift.ImageResource(bundle: R.hostingBundle, name: "comment")
    /// Image `feedback`.
    static let feedback = Rswift.ImageResource(bundle: R.hostingBundle, name: "feedback")
    /// Image `gandhi_profile`.
    static let gandhi_profile = Rswift.ImageResource(bundle: R.hostingBundle, name: "gandhi_profile")
    /// Image `gandhi_status`.
    static let gandhi_status = Rswift.ImageResource(bundle: R.hostingBundle, name: "gandhi_status")
    /// Image `globe_icon`.
    static let globe_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "globe_icon")
    /// Image `globe_small`.
    static let globe_small = Rswift.ImageResource(bundle: R.hostingBundle, name: "globe_small")
    /// Image `help`.
    static let help = Rswift.ImageResource(bundle: R.hostingBundle, name: "help")
    /// Image `home`.
    static let home = Rswift.ImageResource(bundle: R.hostingBundle, name: "home")
    /// Image `like`.
    static let like = Rswift.ImageResource(bundle: R.hostingBundle, name: "like")
    /// Image `messenger_icon`.
    static let messenger_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "messenger_icon")
    /// Image `more_icon`.
    static let more_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "more_icon")
    /// Image `nav_more_icon`.
    static let nav_more_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "nav_more_icon")
    /// Image `news_feed_icon`.
    static let news_feed_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "news_feed_icon")
    /// Image `privacy`.
    static let privacy = Rswift.ImageResource(bundle: R.hostingBundle, name: "privacy")
    /// Image `requests_icon`.
    static let requests_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "requests_icon")
    /// Image `search_icon`.
    static let search_icon = Rswift.ImageResource(bundle: R.hostingBundle, name: "search_icon")
    /// Image `settings`.
    static let settings = Rswift.ImageResource(bundle: R.hostingBundle, name: "settings")
    /// Image `share`.
    static let share = Rswift.ImageResource(bundle: R.hostingBundle, name: "share")
    /// Image `steve_profile`.
    static let steve_profile = Rswift.ImageResource(bundle: R.hostingBundle, name: "steve_profile")
    /// Image `steve_status`.
    static let steve_status = Rswift.ImageResource(bundle: R.hostingBundle, name: "steve_status")
    /// Image `subscriptions`.
    static let subscriptions = Rswift.ImageResource(bundle: R.hostingBundle, name: "subscriptions")
    /// Image `switch_account`.
    static let switch_account = Rswift.ImageResource(bundle: R.hostingBundle, name: "switch_account")
    /// Image `taylor_swift_bad_blood`.
    static let taylor_swift_bad_blood = Rswift.ImageResource(bundle: R.hostingBundle, name: "taylor_swift_bad_blood")
    /// Image `taylor_swift_blank_space`.
    static let taylor_swift_blank_space = Rswift.ImageResource(bundle: R.hostingBundle, name: "taylor_swift_blank_space")
    /// Image `taylor_swift_profile`.
    static let taylor_swift_profile = Rswift.ImageResource(bundle: R.hostingBundle, name: "taylor_swift_profile")
    /// Image `trending`.
    static let trending = Rswift.ImageResource(bundle: R.hostingBundle, name: "trending")
    /// Image `zuckdog`.
    static let zuckdog = Rswift.ImageResource(bundle: R.hostingBundle, name: "zuckdog")
    /// Image `zuckprofile`.
    static let zuckprofile = Rswift.ImageResource(bundle: R.hostingBundle, name: "zuckprofile")
    
    /// `UIImage(named: "cancel", bundle: ..., traitCollection: ...)`
    static func cancel(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.cancel, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "comment", bundle: ..., traitCollection: ...)`
    static func comment(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.comment, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "feedback", bundle: ..., traitCollection: ...)`
    static func feedback(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.feedback, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "gandhi_profile", bundle: ..., traitCollection: ...)`
    static func gandhi_profile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.gandhi_profile, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "gandhi_status", bundle: ..., traitCollection: ...)`
    static func gandhi_status(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.gandhi_status, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "globe_icon", bundle: ..., traitCollection: ...)`
    static func globe_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.globe_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "globe_small", bundle: ..., traitCollection: ...)`
    static func globe_small(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.globe_small, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "help", bundle: ..., traitCollection: ...)`
    static func help(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.help, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "home", bundle: ..., traitCollection: ...)`
    static func home(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.home, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "like", bundle: ..., traitCollection: ...)`
    static func like(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.like, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "messenger_icon", bundle: ..., traitCollection: ...)`
    static func messenger_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.messenger_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "more_icon", bundle: ..., traitCollection: ...)`
    static func more_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.more_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "nav_more_icon", bundle: ..., traitCollection: ...)`
    static func nav_more_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.nav_more_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "news_feed_icon", bundle: ..., traitCollection: ...)`
    static func news_feed_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.news_feed_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "privacy", bundle: ..., traitCollection: ...)`
    static func privacy(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.privacy, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "requests_icon", bundle: ..., traitCollection: ...)`
    static func requests_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.requests_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "search_icon", bundle: ..., traitCollection: ...)`
    static func search_icon(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.search_icon, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "settings", bundle: ..., traitCollection: ...)`
    static func settings(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.settings, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "share", bundle: ..., traitCollection: ...)`
    static func share(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.share, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "steve_profile", bundle: ..., traitCollection: ...)`
    static func steve_profile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.steve_profile, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "steve_status", bundle: ..., traitCollection: ...)`
    static func steve_status(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.steve_status, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "subscriptions", bundle: ..., traitCollection: ...)`
    static func subscriptions(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.subscriptions, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "switch_account", bundle: ..., traitCollection: ...)`
    static func switch_account(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.switch_account, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "taylor_swift_bad_blood", bundle: ..., traitCollection: ...)`
    static func taylor_swift_bad_blood(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.taylor_swift_bad_blood, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "taylor_swift_blank_space", bundle: ..., traitCollection: ...)`
    static func taylor_swift_blank_space(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.taylor_swift_blank_space, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "taylor_swift_profile", bundle: ..., traitCollection: ...)`
    static func taylor_swift_profile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.taylor_swift_profile, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "trending", bundle: ..., traitCollection: ...)`
    static func trending(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.trending, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "zuckdog", bundle: ..., traitCollection: ...)`
    static func zuckdog(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.zuckdog, compatibleWith: traitCollection)
    }
    
    /// `UIImage(named: "zuckprofile", bundle: ..., traitCollection: ...)`
    static func zuckprofile(compatibleWith traitCollection: UIKit.UITraitCollection? = nil) -> UIKit.UIImage? {
      return UIKit.UIImage(resource: R.image.zuckprofile, compatibleWith: traitCollection)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      try _R.validate()
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R: Rswift.Validatable {
  static func validate() throws {
    try storyboard.validate()
  }
  
  struct storyboard: Rswift.Validatable {
    static func validate() throws {
      try launchScreen.validate()
    }
    
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType, Rswift.Validatable {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      static func validate() throws {
        if #available(iOS 11.0, *) {
        }
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
